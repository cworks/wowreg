buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:0.4.3'
    }
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'org.hidetake.ssh'

    /*
     * Default group of all projected managed by this build
     */
    group = 'net-cworks'

    /*
     * Repositories that all projects managed by this build use
     */
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url "http://dl.bintray.com/cworks/maven"
        }
    }

    /*
     * Dependencies every project gets
     */
    dependencies {
        compile("cworks:json:1.4")
        compile("log4j:log4j:1.2.17")
        compile("commons-logging:commons-logging:1.1.3")
        testCompile("junit:junit:4.11")
    }

    /*
     * source code compatibility levels
     */
    compileJava {
        sourceCompatibility=1.8
        targetCompatibility=1.8
    }
    compileTestJava {
        sourceCompatibility=1.8
        targetCompatibility=1.8
    }

    /*
     * Global ssh settings
     */
    ssh.settings {
        logging = 'stdout'
        pty = true
    }

    /*
     * Remote hosts that we can deploy to
     */
    remotes {
        localhost {
            host = 'localhost'
            user = System.properties['user.name']
            identity = file("${System.properties['user.home']}/.ssh/id_rsa")
        }

        wowHost {
            host = 'X.X.X.X'
            user = 'X'
            identity = file("${System.properties['user.home']}/.ssh/X.pem")
        }
    }

    task copyLibs(type: Copy) {
        into "$buildDir/libs"
        from configurations.runtime
    }
}


task deploy << {
    ssh.run {
        session(remotes.wowHost) {
            execute('mkdir wowreg')
            execute('mkdir wowreg/libs')

            def depSet = [] as Set
            FileTree tree = fileTree(dir: 'wowreg-db/build/libs')
            tree.each{File file -> depSet.add(file) }
            tree = fileTree(dir: 'wowreg-server/build/libs')
            tree.each{File file -> depSet.add(file) }

            depSet.each() { file ->
                put(file, 'wowreg/libs/' + file.getName())
                println('uploaded: ' + 'wowreg/libs/' + file.getName())
            };

            execute('mkdir wowreg/conf')
            execute('mkdir wowreg/conf/paypal')
            put('wowreg-server/build/resources/main/sdk_config.properties',
                'wowreg/conf/paypal/sdk_config.properties')

            put('wowreg-server/build/resources/main/wow.sh',
                'wowreg/wow.sh')

            execute('chmod 755 wowreg/wow.sh')
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}
