description "wowreg-db - Wow Registration database project"

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "mysql:mysql-connector-java:5.1.16"
        classpath "org.jooq:jooq-codegen:3.4.1"
    }
}

// ----------------------------------------------------------------------
// These imports are needed to generate jooq code without using a plugin
// I've opted for this method over a plugin because jooq gradle plugins
// seem to be rather flaky at this point in time (3Q 2014)
// ----------------------------------------------------------------------
import javax.xml.bind.JAXB
import org.jooq.util.GenerationTool

dependencies {
    compile("org.jooq:jooq:3.4.1")
    compile("org.jooq:jooq-meta:3.4.1")
    compile("org.jooq:jooq-codegen:3.4.1")
    compile("commons-dbutils:commons-dbutils:1.6")
    compile("mysql:mysql-connector-java:5.1.32")
    compile("net-cworks:json:1.1")
}

// ---------------------------------------------------
// Use the groovy xml builder to generate jooq config
// ---------------------------------------------------
def writer = new StringWriter()
def xml = new groovy.xml.MarkupBuilder(writer)
        .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.4.0.xsd') {
    jdbc() {
        driver('com.mysql.jdbc.Driver')
        url('jdbc:mysql://localhost:3306')
        user('root')
        password('')
    }
    generator() {
        database() {
            name('org.jooq.util.mysql.MySQLDatabase')
            inputSchema('wowreg')
            includes('.*')
        }
        generate() {
            daos(true)
            relations(true)
        }
        target() {
            packageName("net.cworks.wowreg.db.schema")
            directory("${project.name}/src/main/java")
        }
    }
}

// ------------------------
// Run jooq code generator
// ------------------------
GenerationTool.main(
    JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
)


